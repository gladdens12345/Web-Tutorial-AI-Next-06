rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read/write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Extension sessions - only functions can write, users can read their own
    match /extension_sessions/{sessionId} {
      allow read: if request.auth != null;
      allow write: if false; // Only Firebase Functions can write
    }
    
    // Premium users collection - users can read/write their own premium data
    match /premium_users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Additional validation for writes to prevent unauthorized subscription changes
      allow write: if request.auth != null && 
        request.auth.uid == userId &&
        validatePremiumUserWrite(request.auth.uid, resource, request.resource);
    }
    
    // Firebase Stripe Extension collections (read-only for users)
    match /customers/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if false; // Only Firebase Functions can write
      
      match /checkout_sessions/{sessionId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if false;
      }
      
      match /subscriptions/{subscriptionId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if false;
      }
      
      match /payments/{paymentId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if false;
      }
    }
    
    // Products collection (read-only for all authenticated users)
    match /products/{productId} {
      allow read: if request.auth != null;
      allow write: if false;
      
      match /prices/{priceId} {
        allow read: if request.auth != null;
        allow write: if false;
      }
    }
    
    // Admin-only collections
    match /admin/{document=**} {
      allow read, write: if request.auth != null && 
        request.auth.token.email in ['gladdensvp@gmail.com'];
    }
    
    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
  
  // Validation function for premium user writes
  function validatePremiumUserWrite(uid, oldData, newData) {
    // Allow writes if document doesn't exist (creation)
    return oldData == null || 
      // Allow updates to non-critical fields
      (newData.data.userId == uid &&
       // Users can't directly change their subscription status
       (!oldData.data.keys().hasAll(['subscriptionStatus']) || 
        oldData.data.subscriptionStatus == newData.data.subscriptionStatus) &&
       // Users can't change Stripe IDs directly
       (!oldData.data.keys().hasAll(['stripeCustomerId']) || 
        oldData.data.stripeCustomerId == newData.data.stripeCustomerId));
  }
}